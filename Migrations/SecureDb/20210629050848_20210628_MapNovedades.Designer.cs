// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCore.Context;

namespace eCore.Migrations.SecureDb
{
    [DbContext(typeof(SecureOMDb))]
    [Migration("20210629050848_20210628_MapNovedades")]
    partial class _20210628_MapNovedades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eCore.Entities.AllianzCarteraDet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantCuotas")
                        .HasColumnName("cant_cuotas");

                    b.Property<int>("CantCuotas2")
                        .HasColumnName("cant_cuotas2");

                    b.Property<int>("CantDenuncias")
                        .HasColumnName("cant_denuncias");

                    b.Property<int>("CantSiniestros")
                        .HasColumnName("cant_siniestros");

                    b.Property<string>("Chasis")
                        .HasColumnName("chasis")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ClaseEndoso")
                        .HasColumnName("clase_endoso")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Cobertura")
                        .HasColumnName("cobertura")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("ComisionOrg")
                        .HasColumnName("comision_org")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("ComisionProd")
                        .HasColumnName("comision_prod")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Cuatrimestre")
                        .HasColumnName("cuatrimestre")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("DerechoEmision")
                        .HasColumnName("derecho_emision")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("Endoso")
                        .HasColumnName("endoso");

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EstadoSolicitud")
                        .HasColumnName("estado_solicitud")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("FecEmision")
                        .HasColumnName("fec_emision")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaDesdeVigencia")
                        .HasColumnName("fecha_desde_vigencia")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaDespImp")
                        .HasColumnName("fecha_desp_imp")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaFinPrestamo")
                        .HasColumnName("fecha_fin_prestamo")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaHastaVigencia")
                        .HasColumnName("fecha_hasta_vigencia")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaVtoPoliza")
                        .HasColumnName("fecha_vto_poliza")
                        .HasColumnType("datetime");

                    b.Property<string>("FormaDeCobro")
                        .HasColumnName("forma_de_cobro")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("GastosAdm")
                        .HasColumnName("gastos_adm")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("GastosFinanc")
                        .HasColumnName("gastos_financ")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("IdAllianzCarteraEnc")
                        .HasColumnName("id_allianz_cartera_enc");

                    b.Property<decimal>("Infoauto")
                        .HasColumnName("infoauto")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("Item")
                        .HasColumnName("item");

                    b.Property<decimal>("Iva")
                        .HasColumnName("iva")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Linea")
                        .HasColumnName("linea")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Marca")
                        .HasColumnName("marca")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Modelo")
                        .HasColumnName("modelo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Moneda")
                        .HasColumnName("moneda")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Motor")
                        .HasColumnName("motor")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("NombreDelAsegurado")
                        .HasColumnName("nombre_del_asegurado")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("NroInterno")
                        .HasColumnName("nro_interno")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("NumeroDeDocumento")
                        .HasColumnName("numero_de_documento")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Organizador")
                        .HasColumnName("organizador")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Patente")
                        .HasColumnName("patente")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PlanPago")
                        .HasColumnName("plan_pago")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Poliza")
                        .HasColumnName("poliza")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PolizaRenovada")
                        .HasColumnName("poliza_renovada")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("Porc1erCuota")
                        .HasColumnName("porc_1er_cuota")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Productor")
                        .HasColumnName("productor")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Propuesta")
                        .HasColumnName("propuesta")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("Saldo")
                        .HasColumnName("saldo")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Seccion")
                        .HasColumnName("seccion")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("Sellos")
                        .HasColumnName("sellos")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("SumaAsegurada")
                        .HasColumnName("suma_asegurada")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("SumaAsegurada2")
                        .HasColumnName("suma_asegurada2")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("TipoDeDocumento")
                        .HasColumnName("tipo_de_documento")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("TipoOperacion")
                        .HasColumnName("tipo_operacion")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("TipoPoliza")
                        .HasColumnName("tipo_poliza")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("TotalPagado")
                        .HasColumnName("total_pagado")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("TotalPremio")
                        .HasColumnName("total_premio")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("TotalPrima")
                        .HasColumnName("total_prima")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Uso")
                        .HasColumnName("uso")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("ValorDeReferencia")
                        .HasColumnName("valor_de_referencia")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("ValorDeReferencia2")
                        .HasColumnName("valor_de_referencia2")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("Venc1eraCuota")
                        .HasColumnName("venc_1era_cuota");

                    b.HasKey("Id");

                    b.HasIndex("IdAllianzCarteraEnc");

                    b.ToTable("allianz_cartera_det");
                });

            modelBuilder.Entity("eCore.Entities.AllianzCarteraEnc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Archivo")
                        .HasColumnName("archivo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaProceso")
                        .HasColumnName("fecha_proceso")
                        .HasColumnType("datetime");

                    b.Property<string>("Usuario")
                        .HasColumnName("usuario")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("allianz_cartera_enc");
                });

            modelBuilder.Entity("eCore.Entities.AllianzComisionesDet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asegurado")
                        .HasColumnName("asegurado")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("ComisionesDevengadas")
                        .HasColumnName("comisiones_devengadas")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("ComisionesDevengadasPesos")
                        .HasColumnName("comisiones_devengadas_pesos")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("Endoso")
                        .HasColumnName("endoso");

                    b.Property<string>("FPago")
                        .HasColumnName("f_pago")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("Fecha")
                        .HasColumnName("fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IBAgente")
                        .HasColumnName("ib_agente")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("IBRiesgo")
                        .HasColumnName("ib_riesgo")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("IdAllianzComisionesEnc")
                        .HasColumnName("id_allianz_comisiones_enc");

                    b.Property<string>("Mda")
                        .HasColumnName("mda")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("NetoAcreditado")
                        .HasColumnName("neto_acreditado")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("NetoAcreditadoPesos")
                        .HasColumnName("neto_acreditado_pesos")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("NroPoliza")
                        .HasColumnName("nro_poliza")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("OSSEG")
                        .HasColumnName("osseg")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Organizador")
                        .HasColumnName("organizador")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("Premio")
                        .HasColumnName("premio")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("Prima")
                        .HasColumnName("prima")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Productor")
                        .HasColumnName("productor")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ProvinciaRiesgo")
                        .HasColumnName("Provincia_riesgo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Seccion")
                        .HasColumnName("seccion")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Tipo")
                        .HasColumnName("tipo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("TipoCambio")
                        .HasColumnName("tipo_cambio");

                    b.HasKey("Id");

                    b.HasIndex("IdAllianzComisionesEnc");

                    b.ToTable("allianz_comisiones_det");
                });

            modelBuilder.Entity("eCore.Entities.AllianzComisionesEnc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Archivo")
                        .HasColumnName("archivo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaProceso")
                        .HasColumnName("fecha_proceso")
                        .HasColumnType("datetime");

                    b.Property<string>("Usuario")
                        .HasColumnName("usuario")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("allianz_comisiones_enc");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraAccesorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnName("codigo");

                    b.Property<int>("IdCajaCarteraEnc")
                        .HasColumnName("id_caja_cartera_enc");

                    b.Property<int>("Valor")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("IdCajaCarteraEnc");

                    b.ToTable("caja_cartera_accesorio");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraAuto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chasis")
                        .HasColumnName("chasis")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("ClaseVehiculo")
                        .HasColumnName("clase_vehiculo");

                    b.Property<int>("CodInfoauto")
                        .HasColumnName("cod_infoauto");

                    b.Property<string>("DescMarca")
                        .HasColumnName("desc_marca")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("IdCajaCarteraEnc")
                        .HasColumnName("id_caja_cartera_enc");

                    b.Property<int>("Marca")
                        .HasColumnName("Marca");

                    b.Property<string>("McaCeroKm")
                        .HasColumnName("mca_cero_km")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Modelo")
                        .HasColumnName("modelo");

                    b.Property<string>("Motor")
                        .HasColumnName("motor")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Patente")
                        .HasColumnName("patente")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("SumaAsegurada")
                        .HasColumnName("suma_asegurada")
                        .HasColumnType("decimal(10)");

                    b.Property<int>("TipoVehiculo")
                        .HasColumnName("tipo_vehiculo");

                    b.Property<int>("UsoVehiculo")
                        .HasColumnName("uso_vehiculo");

                    b.HasKey("Id");

                    b.HasIndex("IdCajaCarteraEnc");

                    b.ToTable("caja_cartera_auto");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnName("apellido")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("CodIva")
                        .HasColumnName("cod_iva");

                    b.Property<string>("EstCivil")
                        .HasColumnName("est_civil")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnName("fecha_nacimiento")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCajaCarteraEnc")
                        .HasColumnName("id_caja_cartera_enc");

                    b.Property<string>("Nombre")
                        .HasColumnName("nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("NroDocumento")
                        .HasColumnName("nro_documento")
                        .HasColumnType("decimal(20)");

                    b.Property<string>("Sexo")
                        .HasColumnName("sexo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("TipoDocumento")
                        .HasColumnName("tipo_documento")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdCajaCarteraEnc");

                    b.ToTable("caja_cartera_cliente");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraCuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Comision")
                        .HasColumnName("comision")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<DateTime>("FechaVto")
                        .HasColumnName("fecha_vto")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCajaCarteraEnc")
                        .HasColumnName("id_caja_cartera_enc");

                    b.Property<int>("NumCuota")
                        .HasColumnName("num_cuota");

                    b.Property<decimal>("PorcInflacion")
                        .HasColumnName("porc_inflacion")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("Premio")
                        .HasColumnName("premio")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("Prima")
                        .HasColumnName("prima")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Situacion")
                        .HasColumnName("situacion")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdCajaCarteraEnc");

                    b.ToTable("caja_cartera_cuota");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraCuotas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Comision")
                        .HasColumnName("comision")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<DateTime>("FechaVto")
                        .HasColumnName("fecha_vto")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCajaCarteraEnc")
                        .HasColumnName("id_caja_cartera_enc");

                    b.Property<int>("NumCuota")
                        .HasColumnName("num_cuota");

                    b.Property<decimal>("PorcInflacion")
                        .HasColumnName("porc_inflacion")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("Premio")
                        .HasColumnName("premio")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("Prima")
                        .HasColumnName("prima")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Situacion")
                        .HasColumnName("situacion")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdCajaCarteraEnc");

                    b.ToTable("caja_cartera_cuotas");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraDet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aglutinador")
                        .HasColumnName("aglutinador")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CBU")
                        .HasColumnName("cbu")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("CodMon")
                        .HasColumnName("cod_mon");

                    b.Property<int>("CodProd")
                        .HasColumnName("cod_prod");

                    b.Property<int>("Compania")
                        .HasColumnName("compania");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnName("fecha_emision")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnName("fecha_vencimiento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaVigencia")
                        .HasColumnName("fecha_vigencia")
                        .HasColumnType("datetime");

                    b.Property<string>("FormaCobro")
                        .HasColumnName("forma_cobro")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("IdCajaCarteraEnc")
                        .HasColumnName("id_caja_cartera_enc");

                    b.Property<string>("Negocio")
                        .HasColumnName("negocio")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("NumEnd")
                        .HasColumnName("num_end")
                        .HasColumnType("Decimal(10)");

                    b.Property<decimal>("Numero")
                        .HasColumnName("numero")
                        .HasColumnType("Decimal(20)");

                    b.Property<string>("Observacion")
                        .HasColumnName("observacion")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PolizaAnterior")
                        .HasColumnName("poliza_anterior")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Ramo")
                        .HasColumnName("ramo");

                    b.Property<decimal>("Referencia")
                        .HasColumnName("referencia")
                        .HasColumnType("Decimal(20)");

                    b.Property<int>("Seccion")
                        .HasColumnName("seccion");

                    b.Property<string>("Solicitud")
                        .HasColumnName("solicitud")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdCajaCarteraEnc");

                    b.ToTable("caja_cartera_det");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraDomicilio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoPostal")
                        .HasColumnName("codigo_postal")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("CodigoProvincia")
                        .HasColumnName("codigo_provincia");

                    b.Property<string>("Direccion")
                        .HasColumnName("direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("IdCajaCarteraEnc")
                        .HasColumnName("id_caja_cartera_enc");

                    b.Property<string>("Localidad")
                        .HasColumnName("localidad")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdCajaCarteraEnc");

                    b.ToTable("caja_cartera_domicilio");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraDomicilioCorresp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoPostal")
                        .HasColumnName("codigo_postal")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("CodigoProvincia")
                        .HasColumnName("codigo_provincia");

                    b.Property<string>("Direccion")
                        .HasColumnName("direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("IdCajaCarteraEnc")
                        .HasColumnName("id_caja_cartera_enc");

                    b.Property<string>("Localidad")
                        .HasColumnName("localidad")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Telefono")
                        .HasColumnName("telefono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdCajaCarteraEnc");

                    b.ToTable("caja_cartera_domicilio_corresp");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraEnc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Archivo")
                        .HasColumnName("archivo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaProceso")
                        .HasColumnName("fecha_proceso")
                        .HasColumnType("datetime");

                    b.Property<string>("Usuario")
                        .HasColumnName("usuario")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("caja_cartera_enc");
                });

            modelBuilder.Entity("eCore.Entities.MapAsegurados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMapNovedades")
                        .HasColumnName("id_map_novedades");

                    b.Property<string>("asegurado")
                        .HasColumnName("asegurado")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("baja")
                        .HasColumnName("baja")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("codDoc")
                        .HasColumnName("codDoc")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("domicilio")
                        .HasColumnName("domicilio")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("domicilioCom")
                        .HasColumnName("domicilioCom")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<double?>("endoso")
                        .HasColumnName("endoso");

                    b.Property<double?>("iva")
                        .HasColumnName("iva");

                    b.Property<double?>("localidad")
                        .HasColumnName("localidad");

                    b.Property<double?>("localidadCom")
                        .HasColumnName("localidadCom");

                    b.Property<string>("mcaSexo")
                        .HasColumnName("mcaSexo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("nacimiento")
                        .HasColumnName("nacimiento")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("nomina")
                        .HasColumnName("nomina")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("poliza")
                        .HasColumnName("poliza")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<double?>("postal")
                        .HasColumnName("postal");

                    b.Property<double?>("postalCom")
                        .HasColumnName("postalCom");

                    b.Property<double?>("provincia")
                        .HasColumnName("provincia");

                    b.Property<double?>("provinciaCom")
                        .HasColumnName("provinciaCom");

                    b.Property<double?>("riesgo")
                        .HasColumnName("riesgo");

                    b.Property<double?>("telefono")
                        .HasColumnName("telefono");

                    b.Property<double?>("telefonoPais")
                        .HasColumnName("telefonoPais");

                    b.Property<double?>("telefonoZona")
                        .HasColumnName("telefonoZona");

                    b.Property<string>("tipoBenef")
                        .HasColumnName("tipoBenef")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("tipoDoc")
                        .HasColumnName("tipoDoc")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdMapNovedades");

                    b.ToTable("map_asegurados");
                });

            modelBuilder.Entity("eCore.Entities.MapCoberturas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMapNovedades")
                        .HasColumnName("id_map_novedades");

                    b.Property<double?>("cobertura")
                        .HasColumnName("cobertura");

                    b.Property<double?>("endoso")
                        .HasColumnName("endoso");

                    b.Property<string>("poliza")
                        .HasColumnName("poliza")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<double?>("riesgo")
                        .HasColumnName("riesgo");

                    b.Property<double?>("secu")
                        .HasColumnName("secu");

                    b.Property<decimal?>("sumaAseg")
                        .HasColumnName("sumaAseg")
                        .HasColumnType("decimal(12, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdMapNovedades");

                    b.ToTable("map_coberturas");
                });

            modelBuilder.Entity("eCore.Entities.MapCuotas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMapNovedades")
                        .HasColumnName("id_map_novedades");

                    b.Property<double?>("agrpImpositivo")
                        .HasColumnName("agrpImpositivo");

                    b.Property<decimal?>("cobroAnticipado")
                        .HasColumnName("cobroAnticipado")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("convenio")
                        .HasColumnName("convenio")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<double?>("endoso")
                        .HasColumnName("endoso");

                    b.Property<string>("fecCobro")
                        .HasColumnName("fecCobro")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<decimal?>("impComisiones")
                        .HasColumnName("impComisiones")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("importe")
                        .HasColumnName("importe")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("medioPago")
                        .HasColumnName("medioPago")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<double?>("moneda")
                        .HasColumnName("moneda");

                    b.Property<double?>("numeroRecibo")
                        .HasColumnName("numeroRecibo");

                    b.Property<string>("poliza")
                        .HasColumnName("poliza")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("situacionRecibo")
                        .HasColumnName("situacionRecibo")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("vctoRecibo")
                        .HasColumnName("vctoRecibo")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdMapNovedades");

                    b.ToTable("map_cuotas");
                });

            modelBuilder.Entity("eCore.Entities.MapDatosRiesgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMapNovedades")
                        .HasColumnName("id_map_novedades");

                    b.Property<string>("baja")
                        .HasColumnName("baja")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<double?>("endoso")
                        .HasColumnName("endoso");

                    b.Property<string>("nombreRiesgo")
                        .HasColumnName("nombreRiesgo")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("poliza")
                        .HasColumnName("poliza")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<double?>("riesgo")
                        .HasColumnName("riesgo");

                    b.Property<string>("vencimiento")
                        .HasColumnName("vencimiento")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("vigencia")
                        .HasColumnName("vigencia")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdMapNovedades");

                    b.ToTable("map_datos_riesgo");
                });

            modelBuilder.Entity("eCore.Entities.MapDatosVariables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMapNovedades")
                        .HasColumnName("id_map_novedades");

                    b.Property<string>("campo")
                        .HasColumnName("campo")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("descripcion")
                        .HasColumnName("descripcion")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<double?>("endoso")
                        .HasColumnName("endoso");

                    b.Property<double?>("nivel")
                        .HasColumnName("nivel");

                    b.Property<string>("poliza")
                        .HasColumnName("poliza")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<double?>("riesgo")
                        .HasColumnName("riesgo");

                    b.Property<double?>("secu")
                        .HasColumnName("secu");

                    b.Property<string>("valor")
                        .HasColumnName("valor")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdMapNovedades");

                    b.ToTable("map_datos_variables");
                });

            modelBuilder.Entity("eCore.Entities.MapImpuestos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMapNovedades")
                        .HasColumnName("id_map_novedades");

                    b.Property<decimal?>("bonifAdic")
                        .HasColumnName("bonifAdic")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("bonificaciones")
                        .HasColumnName("bonificaciones")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("derEmis")
                        .HasColumnName("derEmis")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<double?>("endoso")
                        .HasColumnName("endoso");

                    b.Property<decimal?>("imptosInternos")
                        .HasColumnName("imptosInternos")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("ingBrutos")
                        .HasColumnName("ingBrutos")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("otrosImptos")
                        .HasColumnName("otrosImptos")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("poliza")
                        .HasColumnName("poliza")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<decimal?>("porComision")
                        .HasColumnName("porComision");

                    b.Property<decimal?>("premio")
                        .HasColumnName("premio")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("primaComisionable")
                        .HasColumnName("primaComisionable")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("primaNoComisionable")
                        .HasColumnName("primaNoComisionable")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("recAdmin")
                        .HasColumnName("recAdmin")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("recFinan")
                        .HasColumnName("recFinan")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("servSociales")
                        .HasColumnName("servSociales")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdMapNovedades");

                    b.ToTable("map_impuestos");
                });

            modelBuilder.Entity("eCore.Entities.MapNovedades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("codEndoso")
                        .HasColumnName("codEndoso");

                    b.Property<string>("codigoDocumentoTom")
                        .HasColumnName("codigoDocumentoTom")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<double?>("compania")
                        .HasColumnName("compania");

                    b.Property<double?>("endoso")
                        .HasColumnName("endoso");

                    b.Property<string>("facturacion")
                        .HasColumnName("facturacion")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("fechaEfecPol")
                        .HasColumnName("fechaEfecPol")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("fechaEfecSpto")
                        .HasColumnName("fechaEfecSpto")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("fechaEmiSpto")
                        .HasColumnName("fechaEmiSpto")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("fechaRenov")
                        .HasColumnName("fechaRenov")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("fechaVctoPol")
                        .HasColumnName("fechaVctoPol")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("fechaVctoSpto")
                        .HasColumnName("fechaVctoSpto")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("motivo")
                        .HasColumnName("motivo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<double?>("planPago")
                        .HasColumnName("planPago");

                    b.Property<string>("poliza")
                        .HasColumnName("poliza")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("polizaAnterior")
                        .HasColumnName("polizaAnterior")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("polizaMadre")
                        .HasColumnName("polizaMadre")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("polizaSiguiente")
                        .HasColumnName("polizaSiguiente")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<double?>("productor")
                        .HasColumnName("productor");

                    b.Property<double?>("ramo")
                        .HasColumnName("ramo");

                    b.Property<double?>("sector")
                        .HasColumnName("sector");

                    b.Property<double?>("subEndoso")
                        .HasColumnName("subEndoso");

                    b.Property<string>("tipoDocumentoTom")
                        .HasColumnName("tipoDocumentoTom")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("map_novedades");
                });

            modelBuilder.Entity("eCore.Entities.TrfDetallePremio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdTrfNovedades")
                        .HasColumnName("id_trf_novedades");

                    b.Property<decimal>("Premio")
                        .HasColumnName("premio")
                        .HasColumnType("decimal(12, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdTrfNovedades");

                    b.ToTable("trf_detalle_premio");
                });

            modelBuilder.Entity("eCore.Entities.TrfNovedades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Articulo")
                        .HasColumnName("articulo");

                    b.Property<int>("ArticuloAnt")
                        .HasColumnName("articulo_ant");

                    b.Property<string>("CUIT")
                        .HasColumnName("cuit")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Certificado")
                        .HasColumnName("certificado")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CertificadoAnt")
                        .HasColumnName("certificado_ant")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("CodigoPostal")
                        .HasColumnName("codigo_postal");

                    b.Property<string>("CondicionIVA")
                        .HasColumnName("condicion_iva")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("CondicionIVAN")
                        .HasColumnName("condicion_ivan");

                    b.Property<string>("DocNumero")
                        .HasColumnName("doc_numero")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("DocTipo")
                        .HasColumnName("doc_tipo");

                    b.Property<string>("Domicilio")
                        .HasColumnName("domicilio")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Empresa")
                        .HasColumnName("empresa")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaAnt")
                        .HasColumnName("empresa_ant")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EstadoPoliza")
                        .HasColumnName("estado_poliza")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EstadoPolizaN")
                        .HasColumnName("estado_poliza_n")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Moneda")
                        .HasColumnName("moneda")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("RazonSocial")
                        .HasColumnName("razon_social")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("SubCodigoPostal")
                        .HasColumnName("sub_codigo_postal");

                    b.Property<string>("Sucursal")
                        .HasColumnName("sucursal")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SucursalAnt")
                        .HasColumnName("Sucursal_ant")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Suplemento")
                        .HasColumnName("suplemento");

                    b.Property<string>("Telefono")
                        .HasColumnName("telefono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("TelefonoParticular")
                        .HasColumnName("telefono_particular")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("VigenciaDesde")
                        .HasColumnName("vigencia_desde")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("VigenciaHasta")
                        .HasColumnName("vigencia_hasta")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("trf_novedades");
                });

            modelBuilder.Entity("eCore.Entities.TrfRama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Bonificacion")
                        .HasColumnName("bonificacion")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("CuotasSociales")
                        .HasColumnName("cuotas_sociales")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("DerechoEmiFijo")
                        .HasColumnName("derecho_emi_fijo")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("DerechoEmision")
                        .HasColumnName("derecho_emision")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("IIBBEmpresa")
                        .HasColumnName("iibb_empresa")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("IIBBPercepcion")
                        .HasColumnName("iibb_percepcion")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("IIBBRiesgo")
                        .HasColumnName("iibb_riesgo")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("IVA")
                        .HasColumnName("iva")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("IVAPercepcion")
                        .HasColumnName("iva_percepcion")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("IVARNI")
                        .HasColumnName("iva_rni")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("IdTrfDetallePremio")
                        .HasColumnName("id_trf_detalle_premio");

                    b.Property<decimal>("ImpInternos")
                        .HasColumnName("imp_internos")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("LeyEmergVial")
                        .HasColumnName("ley_emerg_vial")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("Premio")
                        .HasColumnName("premio")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("Prima")
                        .HasColumnName("prima")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("PrimaNeta")
                        .HasColumnName("prima_neta")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("RecargoAdm")
                        .HasColumnName("recargo_adm")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("RecargoFin")
                        .HasColumnName("recargo_fin")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("RecuperoGastosAsoc")
                        .HasColumnName("recupero_gastos_asoc")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("SelladoEmpresa")
                        .HasColumnName("sellado_empresa")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("SelladoRiesgo")
                        .HasColumnName("sellado_riesgo")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("ServiciosSociales")
                        .HasColumnName("servicios_sociales")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("TasaSSN")
                        .HasColumnName("tasa_ssn")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("rama")
                        .HasColumnName("rama");

                    b.HasKey("Id");

                    b.HasIndex("IdTrfDetallePremio");

                    b.ToTable("trf_rama");
                });

            modelBuilder.Entity("eCore.Entities.TrfSdtcomision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdTrfNovedades")
                        .HasColumnName("id_trf_novedades");

                    b.Property<decimal>("Monto")
                        .HasColumnName("monto")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("NIVC")
                        .HasColumnName("nivc");

                    b.Property<int>("NIVT")
                        .HasColumnName("nivt");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnName("porcentaje")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("Rama")
                        .HasColumnName("rama");

                    b.HasKey("Id");

                    b.HasIndex("IdTrfNovedades");

                    b.ToTable("trf_sdtcomision");
                });

            modelBuilder.Entity("eCore.Entities.TrfSdtcuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FechaCancelada")
                        .HasColumnName("fecha_cancelada")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FechaVtoCuota")
                        .HasColumnName("fecha_vto_cuota")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("IdTrfNovedades")
                        .HasColumnName("id_trf_novedades");

                    b.Property<decimal>("ImporteCuota")
                        .HasColumnName("importe_cuota")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("NumeroCuota")
                        .HasColumnName("numero_cuota");

                    b.HasKey("Id");

                    b.HasIndex("IdTrfNovedades");

                    b.ToTable("trf_sdtcuota");
                });

            modelBuilder.Entity("eCore.Entities.TrfVehiculoDatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Anio")
                        .HasColumnName("anio");

                    b.Property<int>("CeroKm")
                        .HasColumnName("ceroKm");

                    b.Property<string>("Chasis")
                        .HasColumnName("chasis")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Cobertura")
                        .HasColumnName("cobertura")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Dominio")
                        .HasColumnName("dominio")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("IdTrfNovedades")
                        .HasColumnName("id_trf_novedades");

                    b.Property<string>("Marca")
                        .HasColumnName("marca")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("MarcaIA")
                        .HasColumnName("marcaia");

                    b.Property<string>("Modelo")
                        .HasColumnName("modelo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("ModeloIA")
                        .HasColumnName("modeloia");

                    b.Property<string>("Motor")
                        .HasColumnName("motor")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Origen")
                        .HasColumnName("origen")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SubModelo")
                        .HasColumnName("sub_modelo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SumaAsegurada")
                        .HasColumnName("suma_asegurada")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Tipo")
                        .HasColumnName("tipo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("TipoN")
                        .HasColumnName("tipon");

                    b.Property<string>("Uso")
                        .HasColumnName("uso")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("UsoN")
                        .HasColumnName("uson");

                    b.HasKey("Id");

                    b.HasIndex("IdTrfNovedades");

                    b.ToTable("trf_vehiculo_datos");
                });

            modelBuilder.Entity("eCore.Entities.AllianzCarteraDet", b =>
                {
                    b.HasOne("eCore.Entities.AllianzCarteraEnc", "IdAllianzCarteraEncNavigation")
                        .WithMany("AllianzCarteraDet")
                        .HasForeignKey("IdAllianzCarteraEnc")
                        .HasConstraintName("fk_allianz_cartera_det");
                });

            modelBuilder.Entity("eCore.Entities.AllianzComisionesDet", b =>
                {
                    b.HasOne("eCore.Entities.AllianzComisionesEnc", "IdAllianzComisionesEncNavigation")
                        .WithMany("AllianzComisionesDet")
                        .HasForeignKey("IdAllianzComisionesEnc")
                        .HasConstraintName("fk_allianz_comisiones_det");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraAccesorio", b =>
                {
                    b.HasOne("eCore.Entities.CajaCarteraDet", "IdCajaCarteraEncNavigation")
                        .WithMany("CajaCarteraAccesorio")
                        .HasForeignKey("IdCajaCarteraEnc")
                        .HasConstraintName("fk_caja_cartera_accesorio");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraAuto", b =>
                {
                    b.HasOne("eCore.Entities.CajaCarteraDet", "IdCajaCarteraEncNavigation")
                        .WithMany("CajaCarteraAuto")
                        .HasForeignKey("IdCajaCarteraEnc")
                        .HasConstraintName("fk_caja_cartera_auto");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraCliente", b =>
                {
                    b.HasOne("eCore.Entities.CajaCarteraDet", "IdCajaCarteraEncNavigation")
                        .WithMany("CajaCarteraCliente")
                        .HasForeignKey("IdCajaCarteraEnc")
                        .HasConstraintName("fk_caja_cartera_cliente");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraCuota", b =>
                {
                    b.HasOne("eCore.Entities.CajaCarteraDet", "IdCajaCarteraEncNavigation")
                        .WithMany("CajaCarteraCuota")
                        .HasForeignKey("IdCajaCarteraEnc")
                        .HasConstraintName("fk_caja_cartera_cuota");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraCuotas", b =>
                {
                    b.HasOne("eCore.Entities.CajaCarteraDet", "IdCajaCarteraEncNavigation")
                        .WithMany("CajaCarteraCuotas")
                        .HasForeignKey("IdCajaCarteraEnc")
                        .HasConstraintName("fk_caja_cartera_cuotas");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraDet", b =>
                {
                    b.HasOne("eCore.Entities.CajaCarteraEnc", "IdCajaCarteraEncNavigation")
                        .WithMany("CajaCarteraDet")
                        .HasForeignKey("IdCajaCarteraEnc")
                        .HasConstraintName("fk_caja_cartera_det");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraDomicilio", b =>
                {
                    b.HasOne("eCore.Entities.CajaCarteraDet", "IdCajaCarteraEncNavigation")
                        .WithMany("CajaCarteraDomicilio")
                        .HasForeignKey("IdCajaCarteraEnc")
                        .HasConstraintName("fk_caja_cartera_domicilio");
                });

            modelBuilder.Entity("eCore.Entities.CajaCarteraDomicilioCorresp", b =>
                {
                    b.HasOne("eCore.Entities.CajaCarteraDet", "IdCajaCarteraEncNavigation")
                        .WithMany("CajaCarteraDomicilioCorresp")
                        .HasForeignKey("IdCajaCarteraEnc")
                        .HasConstraintName("fk_caja_cartera_domicilio_corresp");
                });

            modelBuilder.Entity("eCore.Entities.MapAsegurados", b =>
                {
                    b.HasOne("eCore.Entities.MapNovedades", "IdMapNovedadesNavigation")
                        .WithMany("MapAsegurados")
                        .HasForeignKey("IdMapNovedades")
                        .HasConstraintName("fk_asegurados_novedades");
                });

            modelBuilder.Entity("eCore.Entities.MapCoberturas", b =>
                {
                    b.HasOne("eCore.Entities.MapNovedades", "IdMapNovedadesNavigation")
                        .WithMany("MapCoberturas")
                        .HasForeignKey("IdMapNovedades")
                        .HasConstraintName("fk_coberturas_novedades");
                });

            modelBuilder.Entity("eCore.Entities.MapCuotas", b =>
                {
                    b.HasOne("eCore.Entities.MapNovedades", "IdMapNovedadesNavigation")
                        .WithMany("MapCuotas")
                        .HasForeignKey("IdMapNovedades")
                        .HasConstraintName("fk_cuotas_novedades");
                });

            modelBuilder.Entity("eCore.Entities.MapDatosRiesgo", b =>
                {
                    b.HasOne("eCore.Entities.MapNovedades", "IdMapNovedadesNavigation")
                        .WithMany("MapDatosRiesgo")
                        .HasForeignKey("IdMapNovedades")
                        .HasConstraintName("fk_datos_riesgo_novedades");
                });

            modelBuilder.Entity("eCore.Entities.MapDatosVariables", b =>
                {
                    b.HasOne("eCore.Entities.MapNovedades", "IdMapNovedadesNavigation")
                        .WithMany("MapDatosVariables")
                        .HasForeignKey("IdMapNovedades")
                        .HasConstraintName("fk_datos_variables_novedades");
                });

            modelBuilder.Entity("eCore.Entities.MapImpuestos", b =>
                {
                    b.HasOne("eCore.Entities.MapNovedades", "IdMapNovedadesNavigation")
                        .WithMany("MapImpuestos")
                        .HasForeignKey("IdMapNovedades")
                        .HasConstraintName("fk_impuestos_novedades");
                });

            modelBuilder.Entity("eCore.Entities.TrfDetallePremio", b =>
                {
                    b.HasOne("eCore.Entities.TrfNovedades", "IdTrfNovedadesNavigation")
                        .WithMany("TrfDetallePremio")
                        .HasForeignKey("IdTrfNovedades")
                        .HasConstraintName("fk_detalle_premio_novedades");
                });

            modelBuilder.Entity("eCore.Entities.TrfRama", b =>
                {
                    b.HasOne("eCore.Entities.TrfDetallePremio", "IdTrfDetallePremioNavigation")
                        .WithMany("TrfRama")
                        .HasForeignKey("IdTrfDetallePremio")
                        .HasConstraintName("fk_trf_rama");
                });

            modelBuilder.Entity("eCore.Entities.TrfSdtcomision", b =>
                {
                    b.HasOne("eCore.Entities.TrfNovedades", "IdTrfNovedadesNavigation")
                        .WithMany("TrfSdtcomision")
                        .HasForeignKey("IdTrfNovedades")
                        .HasConstraintName("fk_sdtcomision_novedades");
                });

            modelBuilder.Entity("eCore.Entities.TrfSdtcuota", b =>
                {
                    b.HasOne("eCore.Entities.TrfNovedades", "IdTrfNovedadesNavigation")
                        .WithMany("TrfSdtcuota")
                        .HasForeignKey("IdTrfNovedades")
                        .HasConstraintName("fk_sdtcuota_novedades");
                });

            modelBuilder.Entity("eCore.Entities.TrfVehiculoDatos", b =>
                {
                    b.HasOne("eCore.Entities.TrfNovedades", "IdTrfNovedadesNavigation")
                        .WithMany("TrfVehiculoDatos")
                        .HasForeignKey("IdTrfNovedades")
                        .HasConstraintName("fk_trf_vehiculo_datos");
                });
#pragma warning restore 612, 618
        }
    }
}
