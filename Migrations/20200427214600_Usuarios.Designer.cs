// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCore.Context;

namespace eCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200427214600_Usuarios")]
    partial class Usuarios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eCore.Entities.AccAcciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("uk_acciones");

                    b.ToTable("acc_acciones");
                });

            modelBuilder.Entity("eCore.Entities.AccEventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contexto")
                        .HasColumnName("contexto")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("IdAccTipoEvento")
                        .HasColumnName("id_acc_tipo_evento");

                    b.Property<int>("IdAccUsuario")
                        .HasColumnName("id_acc_usuario");

                    b.Property<DateTime>("OcurridoEn")
                        .HasColumnName("ocurrido_en")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdAccTipoEvento");

                    b.HasIndex("IdAccUsuario");

                    b.ToTable("acc_eventos");
                });

            modelBuilder.Entity("eCore.Entities.AccGrupos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("uk_grupos");

                    b.ToTable("acc_grupos");
                });

            modelBuilder.Entity("eCore.Entities.AccGruposXPerfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("IdAccGrupo")
                        .HasColumnName("id_acc_grupo");

                    b.Property<int>("IdAccPerfil")
                        .HasColumnName("id_acc_perfil");

                    b.HasKey("Id");

                    b.HasIndex("IdAccGrupo");

                    b.HasIndex("IdAccPerfil", "IdAccGrupo")
                        .IsUnique()
                        .HasName("uk_grupos_x_perfil");

                    b.ToTable("acc_grupos_x_perfil");
                });

            modelBuilder.Entity("eCore.Entities.AccModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdAccModulo")
                        .HasColumnName("id_acc_modulo");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("uk_modulos");

                    b.HasIndex("IdAccModulo");

                    b.ToTable("acc_modulos");
                });

            modelBuilder.Entity("eCore.Entities.AccPerfiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("uk_perfiles");

                    b.ToTable("acc_perfiles");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Entidad")
                        .HasColumnName("entidad")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Objeto")
                        .HasColumnName("objeto")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Parametros")
                        .HasColumnName("parametros")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("uk_programas");

                    b.ToTable("acc_programas");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasAcciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("IdAccAccion")
                        .HasColumnName("id_acc_accion");

                    b.Property<int>("IdAccPrograma")
                        .HasColumnName("id_acc_programa");

                    b.Property<string>("Origen")
                        .HasColumnName("origen")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdAccAccion");

                    b.HasIndex("IdAccPrograma", "IdAccAccion", "Origen")
                        .IsUnique()
                        .HasName("uk_programas_acciones")
                        .HasFilter("[origen] IS NOT NULL");

                    b.ToTable("acc_programas_acciones");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasAccionesXGrupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasColumnType("text");

                    b.Property<int>("IdAccGrupo")
                        .HasColumnName("id_acc_grupo");

                    b.Property<int>("IdProgramaAccion")
                        .HasColumnName("id_programa_accion");

                    b.HasKey("Id");

                    b.HasIndex("IdProgramaAccion");

                    b.HasIndex("IdAccGrupo", "IdProgramaAccion")
                        .IsUnique()
                        .HasName("uk_programas_acciones_x_grupo");

                    b.ToTable("acc_programas_acciones_x_grupo");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasFavoritosXUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("IdAccPrograma")
                        .HasColumnName("id_acc_programa");

                    b.Property<int>("IdAccUsuario")
                        .HasColumnName("id_acc_usuario");

                    b.HasKey("Id");

                    b.HasIndex("IdAccUsuario");

                    b.HasIndex("IdAccPrograma", "IdAccUsuario")
                        .IsUnique()
                        .HasName("uk_acc_programas_favoritos_x_usuario");

                    b.ToTable("acc_programas_favoritos_x_usuario");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasRecientesXUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnName("fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAccPrograma")
                        .HasColumnName("id_acc_programa");

                    b.Property<int>("IdAccUsuario")
                        .HasColumnName("id_acc_usuario");

                    b.HasKey("Id");

                    b.HasIndex("IdAccPrograma");

                    b.HasIndex("IdAccUsuario");

                    b.ToTable("acc_programas_recientes_x_usuario");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasXModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("IdAccModulo")
                        .HasColumnName("id_acc_modulo");

                    b.Property<int>("IdAccPrograma")
                        .HasColumnName("id_acc_programa");

                    b.HasKey("Id");

                    b.HasIndex("IdAccModulo");

                    b.HasIndex("IdAccPrograma", "IdAccModulo")
                        .IsUnique()
                        .HasName("uk_programas_x_modulos");

                    b.ToTable("acc_programas_x_modulos");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasXUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("IdAccPrograma")
                        .HasColumnName("id_acc_programa");

                    b.Property<int>("IdAccUsuario")
                        .HasColumnName("id_acc_usuario");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnName("tipo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdAccUsuario");

                    b.HasIndex("IdAccPrograma", "IdAccUsuario")
                        .IsUnique()
                        .HasName("uk_programas_x_usuario");

                    b.ToTable("acc_programas_x_usuario");
                });

            modelBuilder.Entity("eCore.Entities.AccTiposEventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnName("tipo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("uk_eventos");

                    b.ToTable("acc_tipos_eventos");
                });

            modelBuilder.Entity("eCore.Entities.AccUsuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdCuenta")
                        .IsRequired()
                        .HasColumnName("ad_cuenta")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Bloqueado")
                        .HasColumnName("bloqueado");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("IdAccPerfil")
                        .HasColumnName("id_acc_perfil");

                    b.Property<int>("MaxCantidadConexiones")
                        .HasColumnName("max_cantidad_conexiones");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnName("nombres")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SecurityIdentifier")
                        .IsRequired()
                        .HasColumnName("security_identifier")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasColumnName("sucursal")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UltimaConexion")
                        .HasColumnName("ultima_conexion")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AdCuenta")
                        .IsUnique()
                        .HasName("uk_ad_cuenta");

                    b.HasIndex("IdAccPerfil");

                    b.HasIndex("SecurityIdentifier")
                        .IsUnique()
                        .HasName("uk_security_identifier");

                    b.ToTable("acc_usuarios");
                });

            modelBuilder.Entity("eCore.Entities.AccUsuariosSesiones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("Eventos")
                        .HasColumnName("eventos")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FinalizaEn")
                        .HasColumnName("finaliza_en")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAccUsuario")
                        .HasColumnName("id_acc_usuario");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnName("token")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UltimaConexion")
                        .HasColumnName("ultima_conexion")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdAccUsuario");

                    b.ToTable("acc_usuarios_sesiones");
                });

            modelBuilder.Entity("eCore.Entities.LAccGrupos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accionsql")
                        .IsRequired()
                        .HasColumnName("accionsql")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.HasKey("Id");

                    b.ToTable("l_acc_grupos");
                });

            modelBuilder.Entity("eCore.Entities.LAccModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accionsql")
                        .IsRequired()
                        .HasColumnName("accionsql")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdAccModulo")
                        .HasColumnName("id_acc_modulo");

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.HasKey("Id");

                    b.ToTable("l_acc_modulos");
                });

            modelBuilder.Entity("eCore.Entities.LAccPerfiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accionsql")
                        .IsRequired()
                        .HasColumnName("accionsql")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.HasKey("Id");

                    b.ToTable("l_acc_perfiles");
                });

            modelBuilder.Entity("eCore.Entities.LAccProgramas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accionsql")
                        .IsRequired()
                        .HasColumnName("accionsql")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Entidad")
                        .HasColumnName("entidad")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.Property<string>("Objeto")
                        .HasColumnName("objeto")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Parametros")
                        .HasColumnName("parametros")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("l_acc_programas");
                });

            modelBuilder.Entity("eCore.Entities.LAccUsuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accionsql")
                        .IsRequired()
                        .HasColumnName("accionsql")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("AdCuenta")
                        .IsRequired()
                        .HasColumnName("ad_cuenta")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Bloqueado")
                        .HasColumnName("bloqueado");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("IdAccPerfil")
                        .HasColumnName("id_acc_perfil");

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.Property<int>("MaxCantidadConexiones")
                        .HasColumnName("max_cantidad_conexiones");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnName("nombres")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SecurityIdentifier")
                        .IsRequired()
                        .HasColumnName("security_identifier")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasColumnName("sucursal")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UltimaConexion")
                        .HasColumnName("ultima_conexion")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("l_acc_usuarios");
                });

            modelBuilder.Entity("eCore.Entities.MAccGrupos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.Property<string>("Modifica")
                        .IsRequired()
                        .HasColumnName("modifica")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("m_acc_grupos");
                });

            modelBuilder.Entity("eCore.Entities.MAccModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdAccModulo")
                        .HasColumnName("id_acc_modulo");

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.Property<string>("Modifica")
                        .IsRequired()
                        .HasColumnName("modifica")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdAccModulo");

                    b.HasIndex("IdOrigen");

                    b.ToTable("m_acc_modulos");
                });

            modelBuilder.Entity("eCore.Entities.MAccPerfiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.Property<string>("Modifica")
                        .IsRequired()
                        .HasColumnName("modifica")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdOrigen");

                    b.ToTable("m_acc_perfiles");
                });

            modelBuilder.Entity("eCore.Entities.MAccProgramas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Entidad")
                        .HasColumnName("entidad")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.Property<string>("Modifica")
                        .IsRequired()
                        .HasColumnName("modifica")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Objeto")
                        .HasColumnName("objeto")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Parametros")
                        .HasColumnName("parametros")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdOrigen");

                    b.ToTable("m_acc_programas");
                });

            modelBuilder.Entity("eCore.Entities.MAccUsuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdCuenta")
                        .IsRequired()
                        .HasColumnName("ad_cuenta")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Bloqueado")
                        .HasColumnName("bloqueado");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("IdAccPerfil")
                        .HasColumnName("id_acc_perfil");

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.Property<int>("MaxCantidadConexiones")
                        .HasColumnName("max_cantidad_conexiones");

                    b.Property<string>("Modifica")
                        .IsRequired()
                        .HasColumnName("modifica")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnName("nombres")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SecurityIdentifier")
                        .IsRequired()
                        .HasColumnName("security_identifier")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasColumnName("sucursal")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UltimaConexion")
                        .HasColumnName("ultima_conexion")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdAccPerfil");

                    b.HasIndex("IdOrigen");

                    b.ToTable("m_acc_usuarios");
                });

            modelBuilder.Entity("eCore.Entities.NAccGrupos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accionsql")
                        .IsRequired()
                        .HasColumnName("accionsql")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.HasKey("Id");

                    b.ToTable("n_acc_grupos");
                });

            modelBuilder.Entity("eCore.Entities.NAccModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accionsql")
                        .IsRequired()
                        .HasColumnName("accionsql")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdAccModulo")
                        .HasColumnName("id_acc_modulo");

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.HasKey("Id");

                    b.ToTable("n_acc_modulos");
                });

            modelBuilder.Entity("eCore.Entities.NAccPerfiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accionsql")
                        .IsRequired()
                        .HasColumnName("accionsql")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.HasKey("Id");

                    b.ToTable("n_acc_perfiles");
                });

            modelBuilder.Entity("eCore.Entities.NAccProgramas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accionsql")
                        .IsRequired()
                        .HasColumnName("accionsql")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Entidad")
                        .HasColumnName("entidad")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .HasColumnName("icono")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.Property<string>("Objeto")
                        .HasColumnName("objeto")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Parametros")
                        .HasColumnName("parametros")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("n_acc_programas");
                });

            modelBuilder.Entity("eCore.Entities.NAccUsuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accionsql")
                        .IsRequired()
                        .HasColumnName("accionsql")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("AdCuenta")
                        .IsRequired()
                        .HasColumnName("ad_cuenta")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AutorizadoEn")
                        .HasColumnName("autorizado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("AutorizadoPor")
                        .HasColumnName("autorizado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Bloqueado")
                        .HasColumnName("bloqueado");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnName("creado_en")
                        .HasColumnType("datetime");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnName("creado_por")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("IdAccPerfil")
                        .HasColumnName("id_acc_perfil");

                    b.Property<int?>("IdOrigen")
                        .HasColumnName("id_origen");

                    b.Property<int>("MaxCantidadConexiones")
                        .HasColumnName("max_cantidad_conexiones");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnName("nombres")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SecurityIdentifier")
                        .IsRequired()
                        .HasColumnName("security_identifier")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasColumnName("sucursal")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UltimaConexion")
                        .HasColumnName("ultima_conexion")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("n_acc_usuarios");
                });

            modelBuilder.Entity("eCore.Entities.AccEventos", b =>
                {
                    b.HasOne("eCore.Entities.AccTiposEventos", "IdAccTipoEventoNavigation")
                        .WithMany("AccEventos")
                        .HasForeignKey("IdAccTipoEvento")
                        .HasConstraintName("fk_acc_eventos_tipos_eventos");

                    b.HasOne("eCore.Entities.AccUsuarios", "IdAccUsuarioNavigation")
                        .WithMany("AccEventos")
                        .HasForeignKey("IdAccUsuario")
                        .HasConstraintName("fk_acc_eventos_usuarios");
                });

            modelBuilder.Entity("eCore.Entities.AccGruposXPerfil", b =>
                {
                    b.HasOne("eCore.Entities.AccGrupos", "IdAccGrupoNavigation")
                        .WithMany("AccGruposXPerfil")
                        .HasForeignKey("IdAccGrupo")
                        .HasConstraintName("fk_acc_grupos_x_perfil_modulos");

                    b.HasOne("eCore.Entities.AccPerfiles", "IdAccPerfilNavigation")
                        .WithMany("AccGruposXPerfil")
                        .HasForeignKey("IdAccPerfil")
                        .HasConstraintName("fk_acc_grupos_x_perfil_perfiles");
                });

            modelBuilder.Entity("eCore.Entities.AccModulos", b =>
                {
                    b.HasOne("eCore.Entities.AccModulos", "IdAccModuloNavigation")
                        .WithMany("InverseIdAccModuloNavigation")
                        .HasForeignKey("IdAccModulo")
                        .HasConstraintName("fk_menues_padre");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasAcciones", b =>
                {
                    b.HasOne("eCore.Entities.AccAcciones", "IdAccAccionNavigation")
                        .WithMany("AccProgramasAcciones")
                        .HasForeignKey("IdAccAccion")
                        .HasConstraintName("fk_acc_programas_acciones_acciones");

                    b.HasOne("eCore.Entities.AccProgramas", "IdAccProgramaNavigation")
                        .WithMany("AccProgramasAcciones")
                        .HasForeignKey("IdAccPrograma")
                        .HasConstraintName("fk_acc_programas_acciones_programas");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasAccionesXGrupo", b =>
                {
                    b.HasOne("eCore.Entities.AccGrupos", "IdAccGrupoNavigation")
                        .WithMany("AccProgramasAccionesXGrupo")
                        .HasForeignKey("IdAccGrupo")
                        .HasConstraintName("fk_acc_programas_acciones_x_grupo_grupo");

                    b.HasOne("eCore.Entities.AccProgramasAcciones", "IdProgramaAccionNavigation")
                        .WithMany("AccProgramasAccionesXGrupo")
                        .HasForeignKey("IdProgramaAccion")
                        .HasConstraintName("fk_acc_programas_acciones_x_grupo_accion");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasFavoritosXUsuario", b =>
                {
                    b.HasOne("eCore.Entities.AccProgramas", "IdAccProgramaNavigation")
                        .WithMany("AccProgramasFavoritosXUsuario")
                        .HasForeignKey("IdAccPrograma")
                        .HasConstraintName("fk_acc_programas_favoritos_x_usuario_prog");

                    b.HasOne("eCore.Entities.AccUsuarios", "IdAccUsuarioNavigation")
                        .WithMany("AccProgramasFavoritosXUsuario")
                        .HasForeignKey("IdAccUsuario")
                        .HasConstraintName("fk_acc_programas_favoritos_x_usuario_usr");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasRecientesXUsuario", b =>
                {
                    b.HasOne("eCore.Entities.AccProgramas", "IdAccProgramaNavigation")
                        .WithMany("AccProgramasRecientesXUsuario")
                        .HasForeignKey("IdAccPrograma")
                        .HasConstraintName("fk_acc_programas_recientes_x_usuario_prog");

                    b.HasOne("eCore.Entities.AccUsuarios", "IdAccUsuarioNavigation")
                        .WithMany("AccProgramasRecientesXUsuario")
                        .HasForeignKey("IdAccUsuario")
                        .HasConstraintName("fk_acc_programas_recientes_x_usuario_usr");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasXModulos", b =>
                {
                    b.HasOne("eCore.Entities.AccModulos", "IdAccModuloNavigation")
                        .WithMany("AccProgramasXModulos")
                        .HasForeignKey("IdAccModulo")
                        .HasConstraintName("fk_acc_modulos_programas_x_modulos");

                    b.HasOne("eCore.Entities.AccProgramas", "IdAccProgramaNavigation")
                        .WithMany("AccProgramasXModulos")
                        .HasForeignKey("IdAccPrograma")
                        .HasConstraintName("fk_acc_programas_x_modulos");
                });

            modelBuilder.Entity("eCore.Entities.AccProgramasXUsuario", b =>
                {
                    b.HasOne("eCore.Entities.AccProgramas", "IdAccProgramaNavigation")
                        .WithMany("AccProgramasXUsuario")
                        .HasForeignKey("IdAccPrograma")
                        .HasConstraintName("fk_acc_programas_x_usuario_prog");

                    b.HasOne("eCore.Entities.AccUsuarios", "IdAccUsuarioNavigation")
                        .WithMany("AccProgramasXUsuario")
                        .HasForeignKey("IdAccUsuario")
                        .HasConstraintName("fk_acc_programas_x_usuario_usr");
                });

            modelBuilder.Entity("eCore.Entities.AccUsuarios", b =>
                {
                    b.HasOne("eCore.Entities.AccPerfiles", "IdAccPerfilNavigation")
                        .WithMany("AccUsuarios")
                        .HasForeignKey("IdAccPerfil")
                        .HasConstraintName("fk_acc_usuarios_perfiles");
                });

            modelBuilder.Entity("eCore.Entities.AccUsuariosSesiones", b =>
                {
                    b.HasOne("eCore.Entities.AccUsuarios", "IdAccUsuarioNavigation")
                        .WithMany("AccUsuariosSesiones")
                        .HasForeignKey("IdAccUsuario")
                        .HasConstraintName("fk_acc_usuarios_sesiones");
                });

            modelBuilder.Entity("eCore.Entities.MAccModulos", b =>
                {
                    b.HasOne("eCore.Entities.AccModulos", "IdAccModuloNavigation")
                        .WithMany("MAccModulosIdAccModuloNavigation")
                        .HasForeignKey("IdAccModulo")
                        .HasConstraintName("fk_id_acc_modulo");

                    b.HasOne("eCore.Entities.AccModulos", "IdOrigenNavigation")
                        .WithMany("MAccModulosIdOrigenNavigation")
                        .HasForeignKey("IdOrigen")
                        .HasConstraintName("fk_m_acc_modulos");
                });

            modelBuilder.Entity("eCore.Entities.MAccPerfiles", b =>
                {
                    b.HasOne("eCore.Entities.AccPerfiles", "IdOrigenNavigation")
                        .WithMany("MAccPerfiles")
                        .HasForeignKey("IdOrigen")
                        .HasConstraintName("fk_m_acc_perfiles");
                });

            modelBuilder.Entity("eCore.Entities.MAccProgramas", b =>
                {
                    b.HasOne("eCore.Entities.AccProgramas", "IdOrigenNavigation")
                        .WithMany("MAccProgramas")
                        .HasForeignKey("IdOrigen")
                        .HasConstraintName("fk_m_acc_programas");
                });

            modelBuilder.Entity("eCore.Entities.MAccUsuarios", b =>
                {
                    b.HasOne("eCore.Entities.AccPerfiles", "IdAccPerfilNavigation")
                        .WithMany("MAccUsuariosIdAccPerfilNavigation")
                        .HasForeignKey("IdAccPerfil")
                        .HasConstraintName("fk_id_acc_perfil_usuario")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("eCore.Entities.AccUsuarios", "IdOrigenNavigation")
                        .WithMany("MAccUsuariosIdOrigenNavigation")
                        .HasForeignKey("IdOrigen")
                        .HasConstraintName("fk_m_acc_perfiles_usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
